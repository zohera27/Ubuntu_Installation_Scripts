Am using 1 Master and 1 work node configuration

Prequistes on all the Nodes:
free -m
sudo swapoff -a
sudo apt-get update && sudo apt-get install -y apt-transport-https curl
sudo curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpgecho "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl
sudo systemctl start docker && sudo systemctl enable docker

1. Master Node - Initializin the Cluster

sudo kubeadm init

Note if you see any error related to containerd -> please go to /etc/containerd/config.toml

enabled_plugins = ["cri"]
[plugins."io.containerd.grpc.v1.cri"]
  sandbox_image = "registry.k8s.io/pause:3.9"

git clone https://github.com/Mirantis/cri-dockerd.git
# Run these commands as root
###Install GO###
wget https://storage.googleapis.com/golang/getgo/installer_linux
chmod +x ./installer_linux
./installer_linux
source ~/.bash_profile

cd cri-dockerd
mkdir bin
go build -o bin/cri-dockerd
mkdir -p /usr/local/bin
install -o root -g root -m 0755 bin/cri-dockerd /usr/local/bin/cri-dockerd
cp -a packaging/systemd/* /etc/systemd/system
sed -i -e 's,/usr/bin/cri-dockerd,/usr/local/bin/cri-dockerd,' /etc/systemd/system/cri-docker.service
systemctl daemon-reload
systemctl enable cri-docker.service
systemctl enable --now cri-docker.socket


sudo kubeadm init --apiserver-advertise-address 192.168.2.105 --pod-network-cidr=10.244.0.0/16
sudo kubeadm init --config=kubeadm.yaml --apiserver-advertise-address 192.168.2.105 --pod-network-cidr=10.244.0.0/16

once successfully initialized
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

 https://kubernetes.io/docs/concepts/cluster-administration/addons/
 
 kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
 
 kubectl get nodes
 kubectl get componentstatuses

sudo ufw allow 10251/tcp
sudo ufw allow 10252/tcp
sudo ufw allow 6443/tcp
sudo ufw allow 2379:2380/tcp
sudo ufw allow 10250/tcp
sudo ufw allow 30000:32767/tcp
sudo ufw allow 10248/tcp
sudo ufw enable

 
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
 
 
 sudo curl -s https:/packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
 sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
 sudo apt-get update
 sudo apt-get install -y kubelet=1.20.00-00 kubeadm=1.20.00-00 kubectl=1.20.00-00 docker.io
 sudo systemctl start docker && sudo systemctl enable docker

kubeadm join 192.168.2.105:6443 --token abcdef.0123456789abcdef \
        --discovery-token-ca-cert-hash sha256:1dd97ef487f147383d3a733ad2eeeaa94a0b1d27ac365329293d49b89a884ca2
